#!/bin/sh

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $DIR/cr_common.sh

export SLURM_CHECKPOINT_IMAGE_DIR=$1
export SLURM_JOB_ID=$2
export SLURM_JOB_NODELIST=$3
export SLURM_TASKS_PER_NODE=$4
export SLURM_NTASKS_PER_NODE=`echo $4 | awk '{split($0, a, "("); print a[1]}'`
export SLURM_JOB_CPUS_PER_NODE=$5
export SLURM_SRUN_COMM_HOST=$6
export SLURM_NNODES=$7
export TMPDIR=$8

#here we will store information about checkpoint
checkpoint_info=$SLURM_CHECKPOINT_IMAGE_DIR"/checkpoint_info."$SLURM_JOB_ID
checkpoint_folder=$SLURM_CHECKPOINT_IMAGE_DIR"/"$SLURM_JOB_ID

#see who is the first task
if ! semaphore $SLURM_CHECKPOINT_IMAGE_DIR $SLURM_JOB_ID;
then
  #this is not the first task
  exit 0
fi

source  $checkpoint_folder/app_type
startDMTCPCoordinator $checkpoint_folder $checkpoint_info $APP_TYPE

source  $checkpoint_info

#checkpoint info is created in startDMTCPCoordinator function. It is different that in "cr_start", where it is created in the "sempahore" function
trap 'rm -rf $checkpoint_info' SIGHUP SIGINT SIGTERM EXIT

#scancel (and svacate) first send SIGTERM, and if jobs have not terminated send a SIGKILL
#in this case we want to cancel the execution of this script, so checkpoint files are not deleted
trap 'exit 0' SIGTERM SIGKILL

#restart job
cd $checkpoint_folder
source  $checkpoint_folder/app_type
if [ "$APP_TYPE" == "SERIAL" ]
then
	@DMTCP_HOME@/dmtcp_restart *dmtcp
elif [ "$APP_TYPE" == "MPI" ]
then
	/bin/sh $checkpoint_folder/dmtcp_restart_script.sh
fi
#remove files after execution, if job was NOT cancelled.
rm -rf $checkpoint_folder
rm -f $SLURM_CHECKPOINT_IMAGE_DIR/$SLURM_JOB_ID".ckpt"

exit 0
