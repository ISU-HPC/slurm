#!/bin/sh

source /etc/profile
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $DIR/cr_common.sh


#########GENERAL INFORMATION
#SLURM_CHECKPOINT_IMAGE_DIR: path where slurm stores checkpoint images, as defined in slurm.conf . It contains many checkpoint_folder and some other stuff
#SLURM_JOB_ID: the Id of the slurm job. Note that in this script it exists as environment var, but in other ones it comes as an input variable
#checkpoint_folder: folder where we want to store the checkpoint information.
#checkpoint_library: library employed to perform a given chekcpoint
#checkpoint_info: file containing checkpoint information during its execution. It is also employed for concurency
#   in case of DMTCP, port and host. It is stored in  SLURM_CHECKPOINT_IMAGE_DIR
#  this file is called SLURM_CHECKPOINT_IMAGE_DIR/checkpoint_info.$SLURM_JOB_ID
#



#############################################
##############################################
####  START JOB WITH CHECKPOINT SUPPORT ######

#Auxiliary functions. Each one initializes a job using a certain checkpoint lib
startBLCRCheckpointedJob(){
  $@
  return 0
}

startDMTCPCheckpointedJob(){


  startDMTCPCoordinator $checkpoint_folder $checkpoint_info

  #start app joining that coordinator
  #TODO MANUEL: ESTO SOLO VALE PARA SERIAL. PARA PARALELO HACE FALTA DEBUG, ESTA EN ACME
  dmtcp_launch --ib --rm --ckptdir $checkpoint_folder $@
  return 0
}

startCRIUCheckpointedJob(){
  $@
  return 0
}


#This is the main function
#$1: name of the checkpoint library to use
#returns: 0 on success, other if not
startCheckpointedJob(){
  if [ "$1" == "BLCR" ]
  then
    startBLCRCheckpointedJob $2
    return 0
  elif [ "$1" == "DMTCP" ]
  then
    startDMTCPCheckpointedJob $2
    return 0
  elif [ "$1" == "CRIU" ]
  then
    startCRIUCheckpointedJob $2
    return 0
  fi
  return 1
}


#############################################
##############################################
####  MAIN: we start here ######

#here we will store information about checkpoint
checkpoint_info=$SLURM_CHECKPOINT_IMAGE_DIR"/checkpoint_info."$SLURM_JOB_ID
checkpoint_folder=$SLURM_CHECKPOINT_IMAGE_DIR"/"$SLURM_JOB_ID

#see who is the first task
if ! semaphore $SLURM_CHECKPOINT_IMAGE_DIR $SLURM_JOB_ID;
then
  #this is not the first task
  exit 0
fi
#clean concurrency file at the end of execution
trap 'rm -rf $checkpoint_info' SIGHUP SIGINT SIGTERM EXIT


#see which checkpoint library we will be using
checkpointLib=`whichCheckpointLib`

#start job with this checkpoint lib
startCheckpointedJob $checkpointLib $@

exit 0
